{"version":3,"file":"static/js/387.c9e541c2.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../service/Api';\nimport { List, Text } from \"./Cast.styled\";\n\n\n// import placeholder from '../../img/images.png';\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [cast, setCast] = useState([]);\n\n\nuseEffect(() => {\n    const movieCast = async () => {\n        try {\n            const response = await fetchMovieCast(movieId);\n            setCast(response);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    movieCast();\n}, [movieId]);\n\n\n\nreturn (\n<>\n{cast.length !== 0 && (\n    <div>\n        <h2>Movie Cast</h2>\n        <List>\n            {cast.map(actor => (\n                <li key={actor.id}>\n                    <img\n                    width=\"200px\"\n                    height=\"300px\"\n                     src={\n                        actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                        : defaultImg\n                     } \n                     alt={actor.original_name} />\n                     <Text>{actor.name}</Text>\n                </li>\n            ))}\n        </List>\n    </div>\n)}\n{cast.length === 0 && <div>Information is absent</div>}\n</>\n);\n};\n\nexport default Cast;","import axios from 'axios';\n\n\nconst API_KEY = '3e4f0d2ea3bccc4e250d1705bdc926eb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst params = {\n  params: { api_key: API_KEY,\n    language: 'en-US',\n},\n};\n\n\nexport const fetchTrending = async () => {//список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n};\n\n\nexport const handleSearch = async (movieName) => { //пошук фільму за ключовим словом на сторінці фільмів.\n    const response = await axios.get(`/search/movie?query=${movieName}`, params);\n    return response.data.results;\n  };\n\n\nexport const fetchMovieDetals = async (movieId) => {//запит повної інформації про фільм для сторінки кінофільму.\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n\n};\n\nexport const fetchMovieCast = async (movieId) => {//запит інформації про акторський склад для сторінки кінофільму.\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  };\n\n  \n\nexport const fetchMovieReviews = async movieId => {//запит оглядів для сторінки кінофільму.\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieCast","sent","t0","console","error","stop","apply","arguments","_jsxs","_Fragment","children","length","_jsx","map","actor","width","height","src","profile_path","concat","alt","original_name","name","id","axios","params","api_key","language","fetchTrending","abrupt","data","results","handleSearch","_ref2","_callee2","movieName","_context2","_x","fetchMovieDetals","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}