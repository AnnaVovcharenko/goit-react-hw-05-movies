{"version":3,"file":"static/js/880.aeeba7ba.chunk.js","mappings":"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","sources":["components/Listfilm/ListFilm.styled.js","components/Listfilm/ListFilm.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: rgba(234, 239, 90, 0.97);;\n  }\n`;","import { useLocation} from 'react-router-dom';\nimport { List, Item, MovieLink  } from \"./ListFilm.styled\";\n\n\nconst ListFilm = ({films}) => {\n    const location = useLocation();\n    \n    return (\n        <List>\n            {films.map(film => (\n                <Item key={film.id}>\n                   <MovieLink\n                   to={`/movies/${film.id}`}\n                   state={{ from: location }}\n                   >\n                    {film.title}\n                   </MovieLink>\n                </Item>\n            ))}\n        </List>\n    )\n};\nexport default ListFilm;","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n    outline: none;\n    background-color: rgba(83, 84, 52, 0.97);\n\n  &:hover {\n    color:rgba(234, 239, 90, 0.97);\n    border: 3px solid rgba(234, 239, 90, 0.97);\n    background-color: rgba(83, 84, 52, 0.97);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  background-color: rgba(83, 84, 52, 0.97);\n\n  &:hover {\n    color: rgba(234, 239, 90, 0.97);\n    border: 3px solid rgba(234, 239, 90, 0.97);\n  }\n`;","import { useState } from 'react';\nimport { SearchForm, Input, Button } from \"./Form.styled\";\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\n export default Form;","import React, { useState } from \"react\";\nimport  Form  from '../../components/Form/Form';\nimport  {Loader}  from '../../components/Loader/Loader';\n\nimport  ListFilm  from '../../components/Listfilm/ListFilm';\nimport { handleSearch } from 'service/Api';\n\nconst Movies = () => {\n\nconst [searchFilms, setSearchFilms] = useState([]);\nconst [loading, setLoading] = useState(false);\nconst [text, setText] = useState(false);\n\n\nconst searchMovies = query => {\n    setLoading(true);\n    \nhandleSearch(query)\n.then(results => {\n    setSearchFilms(results);\n    setText(results.long === 0);\n})\n.catch(error => {\n    console.log(error);\n})\n.finally(() => {\n    setLoading(false);\n});\n};\n\nreturn (\n\n    <div>\n      <Form   searchMovies={searchMovies}/>\n      {loading && <Loader />}  \n      {text && (\n        <p>Nothing found</p>\n      )}\n      {searchFilms && <ListFilm films={searchFilms}/>}\n    </div>\n);\n};\nexport default Movies;","import axios from 'axios';\n\n\nconst API_KEY = '3e4f0d2ea3bccc4e250d1705bdc926eb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst params = {\n  params: { api_key: API_KEY,\n    language: 'en-US',\n},\n};\n\n\nexport const fetchTrending = async () => {//список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n};\n\n\nexport const handleSearch = async (movieName) => { //пошук фільму за ключовим словом на сторінці фільмів.\n    const response = await axios.get(`/search/movie?query=${movieName}`, params);\n    return response.data.results;\n  };\n\n\nexport const fetchMovieDetals = async (movieId) => {//запит повної інформації про фільм для сторінки кінофільму.\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n\n};\n\nexport const fetchMovieCast = async (movieId) => {//запит інформації про акторський склад для сторінки кінофільму.\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  };\n\n  \n\nexport const fetchMovieReviews = async movieId => {//запит оглядів для сторінки кінофільму.\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","SearchForm","Input","Button","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","e","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","text","setText","Form","handleSearch","then","results","long","catch","error","console","log","finally","Loader","ListFilm","axios","params","api_key","language","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","apply","arguments","_ref2","_callee2","movieName","_context2","_x","fetchMovieDetals","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}